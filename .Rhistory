suppressMessages(source("001LoadingRPackages.R"))
##----Reading-Functions----
source("002Functions.R")
##----Reading-Themes----
source("003Themes.R")
##----Reading-Data----
load(file = "./data/RData/HIES2013.RData")
HIES2013
HIES2013 %>% names()
##----Analysis----
HIES2013Demo1 <-
HIES2013 %>%
.$ROSTER %>%
fselect(HHCODE, REGION)  %>%
funique("HHCODE")
HIES2013Demo1
HIES2013Demo2 <-
HIES2013 %>%
.$ROSTER %>%
fselect(HHCODE, IDC, AGE, S1AQ04) %>%
fgroup_by(HHCODE) %>%
fsummarise(
hhsize    = fnobs(HHCODE) # fnobs(IDC)
, children  = fsum(AGE < 18)
, adults    = fsum(AGE >= 18)
, elders    = fsum(AGE >= 65)
, males3565 = fsum(S1AQ04 == 1 & AGE >= 35 & AGE < 65)
, depratio  = fsum(AGE <= 14 | AGE >= 65) / fnobs(HHCODE)
) %>%
fmutate(
depratio25 = iif(test = depratio >= 0.25 & depratio <= 0.60, yes = "Yes", no = "No")
, depratio65 = iif(test = depratio > 0.60, yes = "Yes", no = "No")
)
HIES2013Demo2
HIES2013Demo3 <-
HIES2013 %>%
.$ROSTER %>%
fselect(HHCODE, AGE) %>%
collapse::join(
x = .
, y = HIES2013$SEC2AB %>% fselect(HHCODE, S2AQ01)
, on = "HHCODE"
, how = "left") %>%
fgroup_by(HHCODE) %>%
fsummarise(
frac_lit = fmean(AGE >= 15 & AGE <= 64 & S2AQ01 == 1)
)
HIES2013Demo3
HIES2013Demo4 <-
HIES2013 %>%
.$SEC1B %>%
fselect(HHCODE, S1BQ05) %>%
fgroup_by(HHCODE) %>%
fsummarise(
public_empl = iif(test = fsum(S1BQ05 %in% c(8411, 8412, 8413, 8421, 8422, 8423, 8430)) > 0, yes = "Yes", no = "No")
)
HIES2013Demo4
#----HIES2013DwellingCharacteristics----
HIES2013DwellCharac <-
HIES2013 %>%
.$SEC5M %>%
fselect(HHCODE, S5Q03, S5Q04C, S5Q05, S5Q14) %>%
fmutate(
toilet_flushed = iif(test = S5Q14 %in% c(1, 2, 3), yes = "Yes", no = "No")
, water = nif(
S5Q05 %in% c(1, 8, 10)      , 1
, S5Q05 %in% c(2, 11)         , 2
, S5Q05 %in% c(3)             , 3
, S5Q05 %in% c(4, 5, 6, 7, 9) , 4
) %>%
as_factor()
, tel = nif(
S5Q04C %in% c(1, 2) , "Yes"
, S5Q04C %in% c(3)     , "No"
) %>%
as_factor()
, S5Q03 = parse_number(S5Q03)
) %>%
fgroup_by(HHCODE) %>%
fmutate(overcrowd = fnobs(HHCODE)/S5Q03) %>%
fungroup() %>%
fselect(-c(S5Q03, S5Q04C, S5Q05, S5Q14))
HIES2013DwellCharac
#----HIES2013Durables----
HIES2013Durables <-
HIES2013 %>%
.$SEC7M %>%
fselect(HHCODE, ITC) %>%
fgroup_by(HHCODE) %>%
fsummarise(
heater         = iif(test = fsum(ITC %in% c(712)) > 0, yes = "Yes", no = "No")
, tv_vcr         = iif(test = fsum(ITC %in% c(716, 717)) > 0, yes = "Yes", no = "No")
, fridge         = iif(test = fsum(ITC %in% c(701)) > 0, yes = "Yes", no = "No")
, freezer        = iif(test = fsum(ITC %in% c(702)) > 0, yes = "Yes", no = "No")
, washing_mach   = iif(test = fsum(ITC %in% c(707)) > 0, yes = "Yes", no = "No")
, aircooler      = iif(test = fsum(ITC %in% c(704)) > 0, yes = "Yes", no = "No")
, geyser_aircond = iif(test = fsum(ITC %in% c(706, 703)) > 0, yes = "Yes", no = "No")
, fan            = iif(test = fsum(ITC %in% c(705)) > 0, yes = "Yes", no = "No")
, cook_micro     = iif(test = fsum(ITC %in% c(710, 711)) > 0, yes = "Yes", no = "No")
, car            = iif(test = fsum(ITC %in% c(714)) > 0, yes = "Yes", no = "No")
, only_moto      = iif(test = fsum(ITC %in% c(715) & ITC %notin% c(714)) > 0, yes = "Yes", no = "No")
)
HIES2013Durables
#----HIES2013ProductiveAssets----
HIES2013ProdAssets1 <-
HIES2013 %>%
.$SEC10B %>%
fgroup_by(HHCODE) %>%
fsummarise(
buffalo = iif(test = fsum(CODES == 151) > 0, yes = "Yes", no = "No")
, Cattle  = iif(test = fsum(CODES == 152) > 0, yes = "Yes", no = "No")
)
HIES2013ProdAssets1
HIES2013ProdAssets2 <-
HIES2013 %>%
.$SEC10A %>%
fgroup_by(HHCODE) %>%
fsummarise(
land_1 = iif(test = fsum(S10C1 >= 1 & S10C1 < 5) > 0, yes = "Yes", no = "No")
, land_5 = iif(test = fsum(S10C1 >= 5) > 0, yes = "Yes", no = "No")
)
HIES2013ProdAssets2
#----HIES2013GeographicalLocation----
HIES2013Expend <-
HIES2013 %>%
.$SEC12B %>%
fselect(HHCODE, BS2QA2, BS2QD1, BS2QABCD, BS2QC1, BS2QC2) %>%
fmutate(Expend = BS2QA2 + BS2QD1 + BS2QABCD + BS2QC1) %>%
fselect(HHCODE, ExpandPBS = BS2QC2, Expend)  %>%
funique("HHCODE")
HIES2013Expend
HIES2013Data <-
purrr::reduce(
.x = list(
HIES2013Demo1
, HIES2013Demo2
, HIES2013Demo3
, HIES2013Demo4
, HIES2013DwellCharac
, HIES2013Durables
, HIES2013ProdAssets1
, HIES2013ProdAssets2
, HIES2013Expend
)
, .f = collapse::join, on = "HHCODE", how = "left"
) %>%
janitor::clean_names(case = "all_caps") %>%
future_modify_if(is.character, toupper)
HIES2013Data
HIES2013Data %>%
fmutate(PEA_COMP = EXPEND/(0.8*CHILDREN + ADULTS))
176960/(0.8*6+1)
HIES2013Data <-
purrr::reduce(
.x = list(
HIES2013Demo1
, HIES2013Demo2
, HIES2013Demo3
, HIES2013Demo4
, HIES2013DwellCharac
, HIES2013Durables
, HIES2013ProdAssets1
, HIES2013ProdAssets2
, HIES2013Expend
)
, .f = collapse::join, on = "HHCODE", how = "left"
) %>%
janitor::clean_names(case = "all_caps") %>%
future_modify_if(is.character, toupper) %>%
fmutate(PEA_COMP = EXPEND/(0.8*CHILDREN + ADULTS))
HIES2013Data
fm1 <-
lm(
formula = PEA_COMP ~
ELDERS + DEPRATIO25 +  DEPRATIO65 + OVERCROWD + HHSIZE + I(HHSIZE^2) +
MALES3565 + FRAC_LIT + PUBLIC_EMPL + TOILET_FLUSHED + WATER + TEL +
HEATER + TV_VCR + FRIDGE + FREEZER + WASHING_MACH + AIRCOOLER +
GEYSER_AIRCOND + FAN + COOK_MICRO + CAR + ONLY_MOTO + BUFFALO + CATTLE +
LAND_1 + LAND_5 + REGION + REGION:HEATER + REGION:OVERCROWD
, data = HIES2013Data
)
fm1
model_parameters(fm1)
model_parameters(fm1, standardize = "refit")
fm1Out <-
model_parameters(fm1, standardize = "refit") %>%
as.data.table() %>%
fmutate(across(where(is.numeric), round, 3)) %>%
fselect(-c(CI, df_error))
fm1Out
pdf(file = "./output/fm1Out.pdf", height = nrow(fm1Out)/3.4, width = 1.01*ncol(fm1Out))
grid.table(fm1Out)
dev.off()
system(paste(getOption("pdfviewer"), "./output/fm1Out.pdf"))
pdf(file = "./output/fm1Out.pdf", height = nrow(fm1Out)/3.4, width = 1.01*ncol(fm1Out))
grid.table(fm1Out)
dev.off()
system(paste(getOption("pdfviewer"), "./output/fm1Out.pdf"))
system(paste(getOption("pdfviewer"), "./output/fm1Out.pdf"))
HIES2013Data <-
purrr::reduce(
.x = list(
HIES2013Demo1
, HIES2013Demo2
, HIES2013Demo3
, HIES2013Demo4
, HIES2013DwellCharac
, HIES2013Durables
, HIES2013ProdAssets1
, HIES2013ProdAssets2
, HIES2013Expend
)
, .f = collapse::join, on = "HHCODE", how = "left"
) %>%
janitor::clean_names(case = "all_caps") %>%
future_modify_if(is.character, toupper) %>%
future_modify_if(is.factor, toupper) %>%
fmutate(PEA_COMP = EXPEND/(0.8*CHILDREN + ADULTS))
HIES2013Data
HIES2013Data %>% names()
options(scipen = 999)
fm1 <-
lm(
formula = PEA_COMP ~
ELDERS + DEPRATIO25 +  DEPRATIO65 + OVERCROWD + HHSIZE + I(HHSIZE^2) +
MALES3565 + FRAC_LIT + PUBLIC_EMPL + TOILET_FLUSHED + WATER + TEL +
HEATER + TV_VCR + FRIDGE + FREEZER + WASHING_MACH + AIRCOOLER +
GEYSER_AIRCOND + FAN + COOK_MICRO + CAR + ONLY_MOTO + BUFFALO + CATTLE +
LAND_1 + LAND_5 + REGION + REGION:HEATER + REGION:OVERCROWD
, data = HIES2013Data
)
fm1
model_parameters(fm1)
model_parameters(fm1, standardize = "refit")
fm1Out <-
model_parameters(fm1, standardize = "refit") %>%
as.data.table() %>%
fmutate(across(where(is.numeric), round, 3)) %>%
fselect(-c(CI, df_error))
fm1Out
pdf(file = "./output/fm1Out.pdf", height = nrow(fm1Out)/3.4, width = 1.01*ncol(fm1Out))
grid.table(fm1Out)
dev.off()
system(paste(getOption("pdfviewer"), "./output/fm1Out.pdf"))
if (base::getRversion() >= "2.15.1") {
utils::globalVariables(c("ge_data", "Env", "Gen", "Rep", "Yield"))
}
rm(list = ls())
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/StabilityApp/StabilityApp")
getwd()
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
rm(list = ls())
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/StabilityApp/StabilityApp")
getwd()
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::test()
library(testthat)
library(StabilityApp)
test_check("StabilityApp")
library(testthat)
library(StabilityApp)
test_check("StabilityApp")
shinytest::recordTest()
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/StabilityApp/StabilityApp")
getwd()
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(devtools)
devtools::load_all()
usethis::use_testthat()
usethis::use_test()
usethis::use_test("ui.R")
usethis::use_test("server.R")
shinytest::recordTest()
shinytest::recordTest(ui.R)
shinytest::recordTest("ui.R")
shinytest::recordTest("./R/ui.R")
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/StabilityApp/StabilityApp")
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/StabilityApp/StabilityApp")
getwd()
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/StabilityApp/StabilityApp")
library(testthat)
library(shinytest)
library(shinytest2)
library(testthat)
library(shinytest2)
# Define the path to your Shiny app
app_path <- getwd()
test_that("Shiny app runs without error", {
app <- ShinyDriver$new(app_path)
expect_error(app$stop(), NA) # Expect no error when starting/stopping app
})
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/StabilityApp/StabilityApp")
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/StabilityApp/StabilityApp/inst/StabilityApp")
getwd()
library(doParallel)
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/StabilityApp/StabilityApp/inst/StabilityApp")
library(testthat)
library(shinytest2)
# Define the path to your Shiny app
app_path <- getwd()
app_path
test_that("Shiny app runs without error", {
app <- ShinyDriver$new(app_path)
expect_error(app$stop(), NA) # Expect no error when starting/stopping app
})
?pnorm
## ----SamplingDistCode1----
pnorm(q = 12, mean = 12.1, sd = 0.05/sqrt(10))
## ----SamplingDistCode2----
pnorm(q = 95, mean = 100, sd = 10/sqrt(25))
##------------------------------------------------------------------------------
#  Loading R Packages
##------------------------------------------------------------------------------
library(future)
plan(strategy = c(multiprocess, multisession)[2])
library(doParallel)
##------------------------------------------------------------------------------
#  Loading R Packages
##------------------------------------------------------------------------------
library(future)
plan(strategy = c(multiprocess, multisession)[2])
?plan
plan(strategy = c(multiprocess, multisession)[1])
plan(strategy = c(multiprocess, multisession)[2])
plan(strategy = multisession)
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1)
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
Packages <-
c(
"broom"
, "fastverse"
, "furrr"
, "ggthemes"
, "janitor"
, "kableExtra"
, "knitr"
, "meta"
, "readxl"
, "splitstackshape"
, "stringi"
, "scales"
, "tidytable"
, "tidyverse"
)
Packages[!(Packages %in% installed.packages()[ ,"Package"])]
library(pak)
pkg_install("guido-s/meta/")
pkg_install("guido-s/meta")
library(MRCV)
?margin.table
?marginal.table
farmer.mtable.one <- marginal.table(data = farmer1, I = 1, J = 5)
farmer.mtable.one
farmer.mtable.two <- marginal.table(data = farmer2, I = 3, J = 4)
farmer.mtable.two
rm(list = ls())
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/StabilityApp/StabilityApp")
getwd()
library(doParallel)
library(foreach)
Clusters <- makeCluster(detectCores() - 1) # convention to leave 1 core for OS
registerDoParallel(Clusters)
options(Ncpus = detectCores() - 1, mc.cores = detectCores() - 1, scipen = 999)
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::test()
devtools::install(pkg = ".", quick = TRUE, build_vignettes = TRUE, dependencies = FALSE)
devtools::test_check()
testthat::test_check()
test_check("StabilityApp")
testthat::test_local(path = ".")
devtools::check(remote = TRUE)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
library(pak)
pkg_install("mockery")
# devtools::test()
mockery::mock()
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
library(devtools)
devtools::load_all()
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
library(shinytest)
installed.packages()["shinytest", ]
install.packages("shinytest", dependencies = TRUE)
devtools::check(remote = TRUE)
library(shinytest)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
library(stability)
?ge_data
ge_data
write.csv(x = ge_data, file = "test.csv")
getwd()
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
getwd()
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
devtools::check(remote = TRUE)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets = c('rd', 'collate', 'namespace', 'vignette'))
# devtools::test()
#
# devtools::check(remote = TRUE)
testthat::test_check("StabilityApp")
devtools::install(pkg = ".", quick = TRUE, build_vignettes = TRUE, dependencies = FALSE)
library(testthat)
library(StabilityApp)
testthat::test_check("StabilityApp")
devtools::test()
