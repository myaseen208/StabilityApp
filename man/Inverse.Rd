% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HyperGen.R
\name{Inverse}
\alias{Inverse}
\title{Custom Inverse Function}
\usage{
Inverse(x)
}
\arguments{
\item{x}{An object of class `GFElem` or `PGInf`. If `x` is an instance of `GFElem`, it should represent an element of a finite Galois Field. If `x` is an instance of `PGInf`, it represents the point at infinity in the projective space.}
}
\value{
An object of class `GFElem` if `x` is a Galois Field element and its inverse exists; otherwise, an object of class `PGInf` if `x` is zero. For projective space elements, returns zero.
}
\description{
Computes the multiplicative inverse of a Galois Field element. If the input is zero, it returns a representation of infinity in the projective space. For elements in the projective space, it returns zero.
}
\details{
\itemize{
  \item{If `x` is a `GFElem` (Galois Field element) and is zero, the function returns a `PGInf` object, representing the point at infinity.}
  \item{If `x` is a non-zero `GFElem`, the function calculates its inverse using the Extended Euclidean Algorithm (implemented in `GCDEEA`). The inverse is returned as a `GFElem` object.}
  \item{If `x` is an instance of `PGInf` (point at infinity), the function returns a zero element in the Galois Field.}
  \item{If `x` is neither a `GFElem` nor a `PGInf`, the function stops with an error.}
  }
}
\examples{
# Find the inverse of a Galois Field element
elem <- GFElem$new(3, 7)
result <- Inverse(elem)
result$show()

# Find the inverse of zero (should return the point at infinity)
zero_elem <- GFElem$new(0, 7)
result <- Inverse(zero_elem)
result$show()

# Find the inverse of the point at infinity (should return zero)
infinity_point <- PGInf$new(7)
result <- Inverse(infinity_point)
result$show()
}
