"TABLE_09"            = PakPC2023::TABLE_09 ,
"TABLE_10"            = PakPC2023::TABLE_10 ,
"TABLE_11"            = PakPC2023::TABLE_11 ,
)
})
Data2023Edu <- reactive({
switch(input$dataset2023edu,
"TABLE_12"            = PakPC2023::TABLE_12 ,
"TABLE_13A"           = PakPC2023::TABLE_13A ,
"TABLE_13B"           = PakPC2023::TABLE_13B
)
})
Data2023Dis <- reactive({
switch(input$dataset2023dis,
"TABLE_16"            = PakPC2023::TABLE_16,
"TABLE_17"            = PakPC2023::TABLE_17
)
})
Data2023HC <- reactive({
switch(input$dataset2023hc,
"TABLE_20"            = PakPC2023::TABLE_20,
"TABLE_21"            = PakPC2023::TABLE_21,
"TABLE_22"            = PakPC2023::TABLE_22,
"TABLE_23"            = PakPC2023::TABLE_23,
"TABLE_24"            = PakPC2023::TABLE_24,
"TABLE_25"            = PakPC2023::TABLE_25
)
})
Data2023Listing <- reactive({
switch(input$dataset2023listing,
"TABLE_26"            = PakPC2023::TABLE_26
)
})
Data2023Misc <- reactive({
switch(input$dataset2023misc,
"PakPC2023Pak"         = PakPC2023::PakPC2023Pak %>% fsubset(Region != "Pakistan" & Area != "All"),
"PakPC2023PakDiv"      = PakPC2023::PakPC2023PakDiv,
"PakPC2023PakDist"     = PakPC2023::PakPC2023PakDist
)
})
# Reactive dataset for PakPC2017
Data2017 <- reactive({
switch(input$dataset2017,
"PakPC2017Pak"         = PakPC2017::PakPC2017Pak,
"PakPC2017Pakistan"    = PakPC2017::PakPC2017Pakistan,
"PakPC2017Punjab"      = PakPC2017::PakPC2017Punjab,
"PakPC2017Sindh"       = PakPC2017::PakPC2017Sindh,
"PakPC2017KPK"         = PakPC2017::PakPC2017KPK,
"PakPC2017Balochistan" = PakPC2017::PakPC2017Balochistan,
"PakPC2017FATA"        = PakPC2017::PakPC2017FATA,
"PakPC2017Islamabad"   = PakPC2017::PakPC2017Islamabad,
"PakPC2017Tehsil"      = PakPC2017::PakPC2017Tehsil,
"PakPC2017City10"      = PakPC2017::PakPC2017City10
)
})
# Render pivot table for PakPC 2023
output$Pivot2023Basic <- renderRpivotTable({
rpivotTable(
data           = Data2023Basic(),
rows           = c("PROVINCE"),
cols           = c("REGION"),
aggregatorName = "Sum",
vals           = "Pop2023",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
# Render pivot table for PakPC 2023
output$Pivot2023Edu <- renderRpivotTable({
rpivotTable(
data           = Data2023Edu(),
rows           = c("Region"),
cols           = c("Area"),
aggregatorName = "Sum",
vals           = "Pop2023",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
# Render pivot table for PakPC 2017
output$pivot2017 <- renderRpivotTable({
rpivotTable(
data           = Data2017(),
rows           = c("AdminUnits"),
cols           = c("ResStatus"),
aggregatorName = "Sum",
vals           = "Pop2017",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
}
shinyApp(ui = ui, server = server)
TABLE_01 %>% names()
server <- function(input, output, session) {
# Reactive dataset for PakPC2023
Data2023Basic <- reactive({
switch(input$dataset2023basic,
"TABLE_01"             = PakPC2023::TABLE_01 ,
"TABLE_02"             = PakPC2023::TABLE_02 ,
"TABLE_03"            = PakPC2023::TABLE_03 ,
"TABLE_04"            = PakPC2023::TABLE_04 ,
"TABLE_05"            = PakPC2023::TABLE_05 ,
"TABLE_06"            = PakPC2023::TABLE_06 ,
"TABLE_07"            = PakPC2023::TABLE_07 ,
"TABLE_08"            = PakPC2023::TABLE_08 ,
"TABLE_09"            = PakPC2023::TABLE_09 ,
"TABLE_10"            = PakPC2023::TABLE_10 ,
"TABLE_11"            = PakPC2023::TABLE_11 ,
)
})
Data2023Edu <- reactive({
switch(input$dataset2023edu,
"TABLE_12"            = PakPC2023::TABLE_12 ,
"TABLE_13A"           = PakPC2023::TABLE_13A ,
"TABLE_13B"           = PakPC2023::TABLE_13B
)
})
Data2023Dis <- reactive({
switch(input$dataset2023dis,
"TABLE_16"            = PakPC2023::TABLE_16,
"TABLE_17"            = PakPC2023::TABLE_17
)
})
Data2023HC <- reactive({
switch(input$dataset2023hc,
"TABLE_20"            = PakPC2023::TABLE_20,
"TABLE_21"            = PakPC2023::TABLE_21,
"TABLE_22"            = PakPC2023::TABLE_22,
"TABLE_23"            = PakPC2023::TABLE_23,
"TABLE_24"            = PakPC2023::TABLE_24,
"TABLE_25"            = PakPC2023::TABLE_25
)
})
Data2023Listing <- reactive({
switch(input$dataset2023listing,
"TABLE_26"            = PakPC2023::TABLE_26
)
})
Data2023Misc <- reactive({
switch(input$dataset2023misc,
"PakPC2023Pak"         = PakPC2023::PakPC2023Pak %>% fsubset(Region != "Pakistan" & Area != "All"),
"PakPC2023PakDiv"      = PakPC2023::PakPC2023PakDiv,
"PakPC2023PakDist"     = PakPC2023::PakPC2023PakDist
)
})
# Reactive dataset for PakPC2017
Data2017 <- reactive({
switch(input$dataset2017,
"PakPC2017Pak"         = PakPC2017::PakPC2017Pak,
"PakPC2017Pakistan"    = PakPC2017::PakPC2017Pakistan,
"PakPC2017Punjab"      = PakPC2017::PakPC2017Punjab,
"PakPC2017Sindh"       = PakPC2017::PakPC2017Sindh,
"PakPC2017KPK"         = PakPC2017::PakPC2017KPK,
"PakPC2017Balochistan" = PakPC2017::PakPC2017Balochistan,
"PakPC2017FATA"        = PakPC2017::PakPC2017FATA,
"PakPC2017Islamabad"   = PakPC2017::PakPC2017Islamabad,
"PakPC2017Tehsil"      = PakPC2017::PakPC2017Tehsil,
"PakPC2017City10"      = PakPC2017::PakPC2017City10
)
})
# Render pivot table for PakPC 2023
output$Pivot2023Basic <- renderRpivotTable({
rpivotTable(
data           = Data2023Basic(),
rows           = c("PROVINCE"),
cols           = c("REGION"),
aggregatorName = "Sum",
vals           = "Pop2023",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
# Render pivot table for PakPC 2023
output$Pivot2023Edu <- renderRpivotTable({
rpivotTable(
data           = Data2023Edu(),
rows           = c("Region"),
cols           = c("Area"),
aggregatorName = "Sum",
vals           = "Pop2023",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
# Render pivot table for PakPC 2017
output$pivot2017 <- renderRpivotTable({
rpivotTable(
data           = Data2017(),
rows           = c("AdminUnits"),
cols           = c("ResStatus"),
aggregatorName = "Sum",
vals           = "Pop2017",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
}
shinyApp(ui = ui, server = server)
TABLE_01 %>% names()
server <- function(input, output, session) {
# Reactive dataset for PakPC2023
Data2023Basic <- reactive({
switch(input$dataset2023basic,
"TABLE_01"             = PakPC2023::TABLE_01 ,
"TABLE_02"             = PakPC2023::TABLE_02 ,
"TABLE_03"            = PakPC2023::TABLE_03 ,
"TABLE_04"            = PakPC2023::TABLE_04 ,
"TABLE_05"            = PakPC2023::TABLE_05 ,
"TABLE_06"            = PakPC2023::TABLE_06 ,
"TABLE_07"            = PakPC2023::TABLE_07 ,
"TABLE_08"            = PakPC2023::TABLE_08 ,
"TABLE_09"            = PakPC2023::TABLE_09 ,
"TABLE_10"            = PakPC2023::TABLE_10 ,
"TABLE_11"            = PakPC2023::TABLE_11 ,
)
})
Data2023Edu <- reactive({
switch(input$dataset2023edu,
"TABLE_12"            = PakPC2023::TABLE_12 ,
"TABLE_13A"           = PakPC2023::TABLE_13A ,
"TABLE_13B"           = PakPC2023::TABLE_13B
)
})
Data2023Dis <- reactive({
switch(input$dataset2023dis,
"TABLE_16"            = PakPC2023::TABLE_16,
"TABLE_17"            = PakPC2023::TABLE_17
)
})
Data2023HC <- reactive({
switch(input$dataset2023hc,
"TABLE_20"            = PakPC2023::TABLE_20,
"TABLE_21"            = PakPC2023::TABLE_21,
"TABLE_22"            = PakPC2023::TABLE_22,
"TABLE_23"            = PakPC2023::TABLE_23,
"TABLE_24"            = PakPC2023::TABLE_24,
"TABLE_25"            = PakPC2023::TABLE_25
)
})
Data2023Listing <- reactive({
switch(input$dataset2023listing,
"TABLE_26"            = PakPC2023::TABLE_26
)
})
Data2023Misc <- reactive({
switch(input$dataset2023misc,
"PakPC2023Pak"         = PakPC2023::PakPC2023Pak %>% fsubset(Region != "Pakistan" & Area != "All"),
"PakPC2023PakDiv"      = PakPC2023::PakPC2023PakDiv,
"PakPC2023PakDist"     = PakPC2023::PakPC2023PakDist
)
})
# Reactive dataset for PakPC2017
Data2017 <- reactive({
switch(input$dataset2017,
"PakPC2017Pak"         = PakPC2017::PakPC2017Pak,
"PakPC2017Pakistan"    = PakPC2017::PakPC2017Pakistan,
"PakPC2017Punjab"      = PakPC2017::PakPC2017Punjab,
"PakPC2017Sindh"       = PakPC2017::PakPC2017Sindh,
"PakPC2017KPK"         = PakPC2017::PakPC2017KPK,
"PakPC2017Balochistan" = PakPC2017::PakPC2017Balochistan,
"PakPC2017FATA"        = PakPC2017::PakPC2017FATA,
"PakPC2017Islamabad"   = PakPC2017::PakPC2017Islamabad,
"PakPC2017Tehsil"      = PakPC2017::PakPC2017Tehsil,
"PakPC2017City10"      = PakPC2017::PakPC2017City10
)
})
# Render pivot table for PakPC 2023
output$Pivot2023Basic <- renderRpivotTable({
rpivotTable(
data           = Data2023Basic(),
rows           = c("PROVINCE"),
cols           = c("REGION"),
aggregatorName = "Sum",
vals           = "Pop2023",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
# Render pivot table for PakPC 2023
output$Pivot2023Edu <- renderRpivotTable({
rpivotTable(
data           = Data2023Edu(),
rows           = c("Region"),
cols           = c("Area"),
aggregatorName = "Sum",
vals           = "Pop2023",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
# Render pivot table for PakPC 2017
output$pivot2017 <- renderRpivotTable({
rpivotTable(
data           = Data2017(),
rows           = c("AdminUnits"),
cols           = c("ResStatus"),
aggregatorName = "Sum",
vals           = "ALL_SEXES",
rendererName   = "Table",
subtotals      =  TRUE,
width          = "10%",
height         = "4000px"
)
})
}
shinyApp(ui = ui, server = server)
getwd()
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/PakPC/PakPC/R")
getwd()
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
?menuItem
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
names(TABLE_01)
names(TABLE_12)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
names(TABLE_16)
head(TABLE_16)
names(TABLE_16)
names(TABLE_20)
names(TABLE_26)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("ui.R")
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
?p
shinyApp(ui = ui, server = server)
source("ui.R")
source("ui.R")
source("ui.R")
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("server.R")
shinyApp(ui = ui, server = server)
source("server.R")
source("ui.R")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
require(rpivotTable)
data(mtcars)
rpivotTable(mtcars,rows="gear", cols=c("cyl","carb"),
aggregatorName = "Sum over Sum",
vals =c("mpg","disp"),
width="100%", height="400px")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
?rpivotTable
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
?rendererOptions
devtools::install_github("fraupflaume/rpivotTable")
library(collapse)
library(magrittr)
library(PakPC2017)
library(PakPC2023)
library(rpivotTable)
library(shiny)
library(shinyBS)
library(shinydashboard)
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/PakPC/PakPC/R")
getwd()
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
?rendererOptions
?rpivotTable
library(rpivotTable)
?rpivotTable
library(collapse)
library(magrittr)
library(PakPC2017)
library(PakPC2023)
library(rpivotTable)
library(shiny)
library(shinyBS)
library(shinydashboard)
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/PakPC/PakPC/R")
getwd()
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
?rpivotTable
library(collapse)
library(magrittr)
library(PakPC2017)
library(PakPC2023)
library(rpivotTable)
library(shiny)
library(shinyBS)
library(shinydashboard)
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/PakPC/PakPC/R")
getwd()
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
rpivotTable(mtcars, rows = "am", cols = "cyl", width = "90%", height = "40%",
rendererOptions = list(
c3 = list(size = list(width = "600",height = "500")),
d3 = list(size = list(width = "500", height = "500"))
)) # important to note --- cannot use dynamic sizing here
library(collapse)
library(magrittr)
library(PakPC2017)
library(PakPC2023)
library(rpivotTable)
library(shiny)
library(shinyBS)
library(shinydashboard)
setwd("/media/myaseen208/Documents1/MYaseen208/Consultancy/Mr._M._Yaseen/2017-09-14RPackages/PakPC/PakPC/R")
getwd()
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("ui.R")
source("ui.R")
source("ui.R")
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
source("ui.R")
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
source("server.R")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
source("ui.R")
shinyApp(ui = ui, server = server)
